{"ast":null,"code":"import _asyncToGenerator from \"/home/amimul/Desktop/MISL/ImageReader/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { createWorker } from 'tesseract.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // Source: https://www.remotestack.io/angular-image-upload-and-preview-tutorial-example/\n\nexport class AppComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.title = 'ImageReader'; // This path used in recognize function as static input\n    // image = \"assets/textImage.png\"\n\n    this.uploadForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      file: new FormControl('', [Validators.required]),\n      imgSrc: new FormControl('', [Validators.required])\n    });\n  } // Load the worker as soon as the program starts\n\n\n  ngOnInit() {\n    this.loadWorker();\n  } // Creating worker to recognize the image\n\n\n  loadWorker() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.worker = createWorker({\n        logger: progress => {\n          console.log(progress);\n        }\n      });\n      yield _this.worker.load();\n      yield _this.worker.loadLanguage('eng');\n      yield _this.worker.initialize('eng');\n      console.log('FINISH');\n    })();\n  }\n\n  recognizeImage() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const result = yield (_a = _this2.worker) === null || _a === void 0 ? void 0 : _a.recognize(_this2.uploadForm.value.imgSrc);\n      console.log(result);\n      _this2.ocrResult = result === null || result === void 0 ? void 0 : result.data.text; //await this.worker?.terminate();\n\n      _this2.findInformation(_this2.ocrResult);\n    })();\n  }\n\n  get uf() {\n    return this.uploadForm.controls;\n  }\n\n  onImageChange(e) {\n    const reader = new FileReader();\n\n    if (e.target.files && e.target.files.length) {\n      const [file] = e.target.files; ////\n\n      console.log(file);\n      reader.readAsDataURL(file); ////\n\n      reader.onload = () => {\n        this.imgFile = reader.result;\n        this.uploadForm.patchValue({\n          imgSrc: reader.result\n        });\n      };\n    }\n  }\n\n  upload() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.recognizeImage(); // ////\n      // console.log(this.uploadForm.value.imgSrc);\n      // ////\n      // console.log(this.ocrResult)\n\n    })();\n  }\n\n  findInformation(result) {\n    console.log(\"nothing is executing here\");\n    console.log(result);\n\n    if ((result === null || result === void 0 ? void 0 : result.match(\"NATIONALIDCARD\")) || (result === null || result === void 0 ? void 0 : result.match(\"NATIONAL ID CARD\"))) {\n      for (let i = 0; i < result.length; i++) {\n        console.log(result[i] + \" \");\n      } // Name\n\n\n      var low = result.indexOf(\"Name:\") + 6;\n      let i = low;\n\n      while (result[i] >= 'a' && result[i] <= 'z' || result[i] >= 'A' && result[i] <= 'Z' || result[i] == ' ' || result[i] == '.') {\n        i++;\n      }\n\n      var high = i - 1;\n      this.username = result.substring(low, high);\n      console.log(\"Name: \" + this.username + \"end\"); // DateOfBirth\n\n      low = result.indexOf(\"DateofBirth:\") + 13;\n      high = low + 11;\n      this.userbirthdate = result.substring(low, high);\n      console.log(\"Date of Birth: \" + this.userbirthdate + \"end\"); //ID\n\n      low = result.indexOf(\"IDNO:\") + 6;\n      i = low;\n\n      while (result[i] >= '0' && result[i] <= '9') {\n        i++;\n      }\n\n      high = i;\n      this.userid = result.substring(low, high);\n      console.log(\"ID: \" + this.userid + \"end\");\n    } else {\n      console.log(\"-1\");\n    }\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 0,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/amimul/Desktop/MISL/ImageReader/src/app/app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { createWorker } from 'tesseract.js';\n\nimport { delay } from 'rxjs/operators';\nimport * as Tesseract from 'tesseract.js';\n\n\n    \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n// Source: https://www.remotestack.io/angular-image-upload-and-preview-tutorial-example/\n\nexport class AppComponent implements OnInit{\n  worker?: Tesseract.Worker;\n  imgFile?: string;\n  title = 'ImageReader';\n  \n  \n  // This path used in recognize function as static input\n  // image = \"assets/textImage.png\"\n\n   uploadForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    file: new FormControl('', [Validators.required]),\n    imgSrc: new FormControl('', [Validators.required])\n  });\n  ocrResult?: string;\n\n  username?: string;\n  userid?: string;\n  userbirthdate?: string;\n\n  \n  constructor(private httpClient: HttpClient) {}\n\n  // Load the worker as soon as the program starts\n  ngOnInit(){\n    this.loadWorker();\n  }\n\n\n  // Creating worker to recognize the image\n  async loadWorker(){\n    this.worker = createWorker({\n      logger: progress => {\n        console.log(progress);\n      }\n    });\n    await this.worker.load();\n    await this.worker.loadLanguage('eng');\n    await this.worker.initialize('eng');\n    console.log('FINISH');\n\n  }\n\n  async recognizeImage(){\n    const result = await this.worker?.recognize(this.uploadForm.value.imgSrc);\n    console.log(result);\n    this.ocrResult = result?.data.text;\n    //await this.worker?.terminate();\n    this.findInformation(this.ocrResult);\n  }\n\n    \n  get uf(){\n    return this.uploadForm.controls;\n  }\n   \n  onImageChange(e: any) {\n    const reader = new FileReader();\n    \n    if(e.target.files && e.target.files.length) {\n      const [file] = e.target.files;\n      ////\n      console.log(file);\n      reader.readAsDataURL(file);\n      ////\n    \n      reader.onload = () => {\n        this.imgFile = reader.result as string;\n        this.uploadForm.patchValue({\n          imgSrc: reader.result\n        });\n   \n      };\n    }\n  }\n   \n  async upload(){\n\n    \n\n\n\n    this.recognizeImage();\n    // ////\n    // console.log(this.uploadForm.value.imgSrc);\n    // ////\n    // console.log(this.ocrResult)\n  }\n  \n\n  findInformation(result?: string){\n    console.log(\"nothing is executing here\");\n    console.log(result);\n    if(result?.match(\"NATIONALIDCARD\") || result?.match(\"NATIONAL ID CARD\")){\n      for(let i = 0; i < result.length ; i++){\n        console.log(result[i] + \" \");\n      }\n      // Name\n      var low = result.indexOf(\"Name:\") + 6;\n      let i = low;\n      while( (result[i]>='a' && result[i]<='z') || (result[i]>='A' && result[i]<='Z') || result[i] == ' ' || result[i] == '.'  ){\n        i++;\n      }\n      var high = i-1;\n      this.username= result.substring(low, high);\n      console.log(\"Name: \"+this.username + \"end\");\n\n      // DateOfBirth\n\n      low = result.indexOf(\"DateofBirth:\") + 13;\n      high = low + 11;\n      this.userbirthdate = result.substring(low, high);\n      console.log(\"Date of Birth: \"+this.userbirthdate + \"end\");\n\n      //ID\n\n      low = result.indexOf(\"IDNO:\") + 6;\n      i = low;\n      while( result[i]>='0' && result[i]<='9' ){\n        i++;\n      }\n      high = i;\n      this.userid = result.substring(low, high);\n      console.log(\"ID: \"+this.userid + \"end\");\n\n    }else{\n      console.log(\"-1\");\n    }\n  }\n\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}