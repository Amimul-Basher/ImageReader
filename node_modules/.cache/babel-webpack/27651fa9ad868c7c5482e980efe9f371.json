{"ast":null,"code":"import _asyncToGenerator from \"/home/amimul/Desktop/MISL/ImageReader/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { createWorker } from 'tesseract.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction AppComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.imgFile, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AppComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, AppComponent_div_7_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uf.name.errors == null ? null : ctx_r1.uf.name.errors.required);\n  }\n}\n\nfunction AppComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Image file is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, AppComponent_div_13_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.uf.file.errors == null ? null : ctx_r2.uf.file.errors.required);\n  }\n} // Source: https://www.remotestack.io/angular-image-upload-and-preview-tutorial-example/\n\n\nexport class AppComponent {\n  constructor() {\n    this.title = 'ImageReader'; // data: any;\n    // This path used in recognize function as static input\n    // image = \"assets/textImage.png\"\n\n    this.uploadForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      file: new FormControl('', [Validators.required]),\n      imgSrc: new FormControl('', [Validators.required])\n    });\n  } // Load the worker as soon as the program starts\n\n\n  ngOnInit() {\n    this.loadWorker();\n  } // Creating worker to recognize the image\n\n\n  loadWorker() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.worker = createWorker({\n        logger: progress => {\n          console.log(progress);\n        }\n      });\n      yield _this.worker.load();\n      yield _this.worker.loadLanguage('eng');\n      yield _this.worker.initialize('eng');\n      console.log('FINISH');\n    })();\n  }\n\n  recognizeImage() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      _this2.imageProcessing(); //const result = await this.worker?.recognize(this.uploadForm.value.imgSrc);\n\n\n      const result = yield (_a = _this2.worker) === null || _a === void 0 ? void 0 : _a.recognize(_this2.img.src);\n      console.log(result);\n      _this2.ocrResult = result === null || result === void 0 ? void 0 : result.data.text; //await this.worker?.terminate();\n\n      _this2.findInformation(_this2.ocrResult);\n    })();\n  }\n\n  imageProcessing() {\n    this.img = new Image();\n    this.img.src = this.uploadForm.value.imgSrc;\n    console.log(this.img);\n    this.canvas = document.getElementById('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.drawImage(this.img, 0, 0);\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const data = imageData.data;\n\n    for (var i = 0; i < data.length; i += 4) {\n      var count = data[i] + data[i + 1] + data[i + 2];\n      let avg = 0;\n      if (count > 450) avg = 255; // else if(count > 255) avg = 127.5\n      // else avg = 255;\n\n      data[i] = avg; // red\n\n      data[i + 1] = avg; // green\n\n      data[i + 2] = avg; // blue\n    }\n\n    this.ctx.putImageData(imageData, 0, 0);\n    this.img.src = this.canvas.toDataURL('image/jpg', 1); // for(let y = 0; y < 2; y++){\n    //   for(let x = 0; x < 2; x++){\n    //     let i = (y * 4) * this.img.width + x * 4;\n    //     console.log(i);\n    //     let avg = (this.img.data[i] + this.img.data[i + 1] + this.img.data[i + 2]) / 3;\n    //     this.img.data[i] = avg;\n    //     this.img.data[i + 1] = avg;\n    //     this.img.data[i + 2] = avg;\n    //   }\n    // }\n  }\n\n  get uf() {\n    return this.uploadForm.controls;\n  }\n\n  onImageChange(e) {\n    const reader = new FileReader();\n    this.img = new Image();\n\n    if (e.target.files && e.target.files.length) {\n      const [file] = e.target.files; ////\n\n      reader.readAsDataURL(file); ////\n\n      reader.onload = () => {\n        this.imgFile = reader.result;\n        this.uploadForm.patchValue({\n          imgSrc: reader.result\n        }); //this.img.src = reader.result;\n      };\n    }\n  }\n\n  upload() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.recognizeImage(); // ////\n      // console.log(this.uploadForm.value.imgSrc);\n      // ////\n      // console.log(this.ocrResult)\n\n    })();\n  }\n\n  findInformation(result) {\n    console.log(\"nothing is executing here\");\n    console.log(result);\n\n    if ((result === null || result === void 0 ? void 0 : result.match(\"NATIONALIDCARD\")) || (result === null || result === void 0 ? void 0 : result.match(\"ID CARD\"))) {\n      for (let i = 0; i < result.length; i++) {\n        console.log(result[i] + \" \");\n      } // Name\n\n\n      var low = result.indexOf(\"Name:\") + 6;\n      let i = low;\n\n      while (result[i] >= 'a' && result[i] <= 'z' || result[i] >= 'A' && result[i] <= 'Z' || result[i] == ' ' || result[i] == '.') {\n        i++;\n      }\n\n      var high = i - 1;\n      this.username = result.substring(low, high);\n      console.log(\"Name: \" + this.username + \"end\"); // DateOfBirth\n\n      low = result.indexOf(\"DateofBirth:\") + 13;\n      high = low + 11;\n      this.userbirthdate = result.substring(low, high);\n      console.log(\"Date of Birth: \" + this.userbirthdate + \"end\"); //ID\n\n      low = result.indexOf(\"ID NO:\") + 6;\n      i = low;\n\n      while (result[i] >= '0' && result[i] <= '9' || result[i] == \" \") {\n        i++;\n      }\n\n      high = i;\n      this.userid = result.substring(low, high);\n      console.log(\"ID: \" + this.userid + \"end\");\n    } else {\n      console.log(\"-1\");\n    }\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 29,\n  vars: 8,\n  consts: [[\"id\", \"canvas\", \"width\", \"1000\", \"height\", \"800\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"preview\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"file\", \"formControlName\", \"file\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"file\"], [\"type\", \"file\", \"id\", \"filechange\", \"formControlName\", \"file\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"preview\"], [2, \"width\", \"400px\", \"height\", \"250px\", 3, \"src\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵtemplate(2, AppComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"File Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵtemplate(7, AppComponent_div_7_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_12_listener($event) {\n        return ctx.onImageChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, AppComponent_div_13_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Upload File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"div\");\n      i0.ɵɵelementStart(21, \"h5\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"h5\");\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"h5\");\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"h5\");\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.imgFile);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.uf.name.touched && ctx.uf.name.invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.uf.file.touched && ctx.uf.file.invalid);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.ocrResult);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.userbirthdate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.userid);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/amimul/Desktop/MISL/ImageReader/src/app/app.component.ts","/home/amimul/Desktop/MISL/ImageReader/src/app/app.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { createWorker } from 'tesseract.js';\n\nimport { delay } from 'rxjs/operators';\nimport * as Tesseract from 'tesseract.js';\n\n\n\n    \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n// Source: https://www.remotestack.io/angular-image-upload-and-preview-tutorial-example/\n\nexport class AppComponent implements OnInit{\n  worker?: Tesseract.Worker;\n  imgFile?: string;\n  title = 'ImageReader';\n\n  img : any;\n  w:any;\n  h:any;\n  canvas: any;\n  ctx: any;\n  // data: any;\n  \n  \n  // This path used in recognize function as static input\n  // image = \"assets/textImage.png\"\n\n   uploadForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    file: new FormControl('', [Validators.required]),\n    imgSrc: new FormControl('', [Validators.required])\n  });\n  ocrResult?: string;\n\n  username?: string;\n  userid?: string;\n  userbirthdate?: string;\n\n  \n  constructor() {}\n\n  // Load the worker as soon as the program starts\n  ngOnInit(){\n    this.loadWorker();\n  }\n\n\n  // Creating worker to recognize the image\n  async loadWorker(){\n    this.worker = createWorker({\n      logger: progress => {\n        console.log(progress);\n      }\n    });\n    await this.worker.load();\n    await this.worker.loadLanguage('eng');\n    await this.worker.initialize('eng');\n    console.log('FINISH');\n\n  }\n\n  async recognizeImage(){\n    this.imageProcessing();\n    //const result = await this.worker?.recognize(this.uploadForm.value.imgSrc);\n    \n    const result = await this.worker?.recognize(this.img.src);\n    console.log(result);\n    this.ocrResult = result?.data.text;\n    //await this.worker?.terminate();\n    this.findInformation(this.ocrResult);\n  }\n  imageProcessing(){\n    \n    this.img = new Image();\n    this.img.src = this.uploadForm.value.imgSrc;\n    console.log(this.img);\n    this.canvas = document.getElementById('canvas');\n    this.ctx = this.canvas.getContext('2d');\n\n    this.ctx.drawImage(this.img, 0, 0);\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const data = imageData.data;\n    for (var i = 0; i < data.length; i += 4) {\n        var count = (data[i] + data[i + 1] + data[i + 2]) ;\n        let avg = 0;\n        if (count > 450 ) avg = 255;\n        // else if(count > 255) avg = 127.5\n        // else avg = 255;\n\n        data[i]     = avg; // red\n        data[i + 1] = avg; // green\n        data[i + 2] = avg; // blue\n    }\n    this.ctx.putImageData(imageData, 0, 0);\n    this.img.src = this.canvas.toDataURL('image/jpg', 1);\n    \n    // for(let y = 0; y < 2; y++){\n    //   for(let x = 0; x < 2; x++){\n    //     let i = (y * 4) * this.img.width + x * 4;\n    //     console.log(i);\n    //     let avg = (this.img.data[i] + this.img.data[i + 1] + this.img.data[i + 2]) / 3;\n    //     this.img.data[i] = avg;\n    //     this.img.data[i + 1] = avg;\n    //     this.img.data[i + 2] = avg;\n    //   }\n    // }\n  \n\n    \n  }\n\n    \n  get uf(){\n    return this.uploadForm.controls;\n  }\n   \n  onImageChange(e: any) {\n    const reader = new FileReader();\n    this.img = new Image();\n    \n    if(e.target.files && e.target.files.length) {\n      const [file] = e.target.files;\n      ////\n      \n      \n      reader.readAsDataURL(file);\n      ////\n    \n      reader.onload = () => {\n        this.imgFile = reader.result as string;\n        this.uploadForm.patchValue({\n          imgSrc: reader.result\n        });\n        \n         \n        //this.img.src = reader.result;\n         \n\n   \n      };\n      \n    }\n  }\n   \n  async upload(){\n    this.recognizeImage();\n    // ////\n    // console.log(this.uploadForm.value.imgSrc);\n    // ////\n    // console.log(this.ocrResult)\n  }\n  \n\n  findInformation(result?: string){\n    console.log(\"nothing is executing here\");\n    console.log(result);\n    if(result?.match(\"NATIONALIDCARD\") || result?.match(\"ID CARD\")){\n      for(let i = 0; i < result.length ; i++){\n        console.log(result[i] + \" \");\n      }\n      // Name\n      var low = result.indexOf(\"Name:\") + 6;\n      let i = low;\n      while( (result[i]>='a' && result[i]<='z') || (result[i]>='A' && result[i]<='Z') || result[i] == ' ' || result[i] == '.'  ){\n        i++;\n      }\n      var high = i-1;\n      this.username= result.substring(low, high);\n      console.log(\"Name: \"+this.username + \"end\");\n\n      // DateOfBirth\n\n      low = result.indexOf(\"DateofBirth:\") + 13;\n      high = low + 11;\n      this.userbirthdate = result.substring(low, high);\n      console.log(\"Date of Birth: \"+this.userbirthdate + \"end\");\n\n      //ID\n\n      low = result.indexOf(\"ID NO:\") + 6;\n      i = low;\n      while( (result[i]>='0' && result[i]<='9' ) || result[i] == \" \" ){\n        i++;\n      }\n      high = i;\n      this.userid = result.substring(low, high);\n      console.log(\"ID: \"+this.userid + \"end\");\n\n    }else{\n      console.log(\"-1\");\n    }\n  }\n\n}","<canvas id=\"canvas\" width =\"1000\" height = \"800\"></canvas>\n<form [formGroup]=\"uploadForm\" (ngSubmit)=\"upload()\">\n\n  <div class=\"preview\" *ngIf=\"imgFile\">\n    <img [src]=\"imgFile\" style=\"width:400px; height:250px\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">File Name</label>\n    <input class=\"form-control\" id=\"file\" formControlName=\"file\" type=\"text\">\n    <div *ngIf=\"uf.name.touched && uf.name.invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"uf.name.errors?.required\">Name is required.</div>\n    </div>\n  </div>\n  <br>\n  <div class=\"form-group\">\n    <label for=\"file\">File</label>\n    <input type=\"file\" class=\"form-control\" id=\"filechange\" formControlName=\"file\" (change)=\"onImageChange($event)\">\n    <div *ngIf=\"uf.file.touched && uf.file.invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"uf.file.errors?.required\">Image file is required.</div>\n    </div>\n  </div>\n\n\n  \n  <br><br>\n\n\n\n  <button class=\"btn btn-primary\" type=\"submit\">Upload File</button>\n\n</form>\n<br><br>\n<div>\n  <h5>{{ocrResult}}</h5>\n  <h5>{{username}}</h5>\n  <h5>{{userbirthdate}}</h5>\n  <h5>{{userid}}</h5>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}